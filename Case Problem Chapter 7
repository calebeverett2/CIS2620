using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Case_Problme_1
{
    class Program
    {
        public static string[] talents = { "Dancing", "Musical", "Other" };
        public static char[] validTalentCodes = { 'D', 'M', 'O' };
        public static string[] contestantNames;
        public static char[] contestantTalentCodes;

        static void Main(string[] args)
        {                          //Caleb MacMillan
            int pastContestants;   //3/21/2018
            int currentContestants;//This is the code I wrote for case problem in chapter 7
            Console.Write("LAST YEAR'S TALENT:  ");
            pastContestants = Contestants();
            Console.Write("THIS YEAR'S TALENT:  ");
            currentContestants = Contestants();
            Overview(pastContestants, currentContestants);
            CompetitorTalents(currentContestants);
            TalentListing();
            Console.ReadLine();
        }
        public static int Contestants()
        { 
            int contestants = 0;
            const int MIN = 0; 
            const int MAX = 30; 
            Console.Write("Please enter the number of contestants:  ");
            contestants = Int32.Parse(Console.ReadLine());
            while (contestants < MIN || contestants > MAX)
            {
                Console.Write("Invalid number.  Please enter a number between 0 and 30, inclusive:  ");
                contestants = Int32.Parse(Console.ReadLine());
            }
            return contestants;
        }
        public static void Overview(int past, int current)
        { 
            double entranceFee = 25.00;
            Console.WriteLine("\nWe had {0} contestants last year and have {1} contestants this year.", past,
                               current);
            if (current > (past * 2))
                Console.WriteLine("The competition is more than twice as big this year!");
            if (current > past && current < (past * 2))
                Console.WriteLine("The competition is bigger than ever!");
            if (current < past)
                Console.WriteLine("A tighter race this year.  Come out and cast your vote!");
            Console.WriteLine("\nThe revenue expected for this year is {0:C}.", current * entranceFee);
        }
        public static void CompetitorTalents(int current)
        {
            string contestantNameEntered;
            char talentCodeEntered; 
            int[] total = new int[talents.Length];
            bool validCode = false;
            int counter = 0;
            contestantNames = new string[current]; 
            contestantTalentCodes = new char[current]; 
            while (counter < current)
            {
                Console.Write("Please enter the name of contestant:   ");
                contestantNameEntered = Console.ReadLine();
                counter += 1; 
                validCode = false;
                contestantNames[counter - 1] = contestantNameEntered;
                while (validCode == false) 
                {
                    Console.Write("Please enter the contestant's talent code (D=Dancing, M=Musical, O=Other):  ");
                    talentCodeEntered = Char.Parse(Console.ReadLine().ToUpper()); 
                    for (int x = 0; x < validTalentCodes.Length && !validCode; ++x)

                        if (talentCodeEntered == validTalentCodes[x]) 
                        {
                            validCode = true; 
                            contestantTalentCodes[counter - 1] = talentCodeEntered; 
                            x = validTalentCodes.Length; 
                        }
                    if (validCode == false) 
                    {
                        Console.WriteLine("Invalid code talent Code.");
                    }
                }
            }
            for (int z = 0; z < validTalentCodes.Length; z++)
                for (int x = 0; x < contestantTalentCodes.Length; x++) 
                    if (contestantTalentCodes[x] == validTalentCodes[z])
                    {
                        total[z]++;
                    }
            for (int x = 0; x < talents.Length; ++x)
                Console.WriteLine("Total contenstants for {0} is {1}.", talents[x], total[x]);

            return;
        }
        public static void TalentListing()
        {
            const char QUIT = 'Q';
            char userOption = ' ';
            bool validCode = false;
            while (userOption != QUIT)
            {
                Console.Write("\nWhat talent code would you like to view? (D, M, O or Q to quit):  ");
                validCode = false;  
                userOption = Char.Parse(Console.ReadLine().ToUpper());
                for (int x = 0; x < contestantNames.Length && !validCode; ++x)
                {
                    if (userOption == validTalentCodes[x])
                    {
                        validCode = true;
                        Console.Write("The contestants in {0} talent are: ", validTalentCodes[x]);
                        for (int z = 0; z < contestantTalentCodes.Length; z++) 
                            if (contestantTalentCodes[z] == userOption)
                            {
                                Console.Write("\n{0}", contestantNames[z]);
                            }
                    }
                }
                if (validCode == false)
                    Console.WriteLine("Invalid talent code!");
            }
            Console.WriteLine(); 
        }
    }
}
